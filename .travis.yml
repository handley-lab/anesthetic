# linux matrix
language: python
dist: xenial
os: linux
python:
    - "3.6"
    - "3.5"
    - "2.7"
    - "3.7"
cache: pip
env:
    - 
    - CONDA=1
    - EXTRAS=1
    - CONDA=1 EXTRAS=1

# OSX and MontePython master
matrix:
    include:
        # OSX
        - os: osx
          language: generic
          cache: pip

        # OSX conda
        - os: osx
          language: generic
          env: CONDA=1 

        # OSX extras
        - os: osx
          language: generic
          cache: pip
          env: EXTRAS=1

        # OSX conda + extras
        - os: osx
          language: generic
          cache: pip
          env: CONDA=1 EXTRAS=1

        # MontePython master branch check
        - os: linux
          python: 2.7
          cache: pip
          env: EXTRAS=1 MONTEPYTHONMASTER=1

    allow_failures:
        - os: linux
          python: 2.7
          cache: pip
          env: EXTRAS=1 MONTEPYTHONMASTER=1

        - os: linux
          dist: xenial
          language: python
          python: 3.7
          cache: pip
          env: CONDA=1

        - os: linux
          dist: xenial
          language: python
          python: 3.7
          cache: pip
          env: CONDA=1 EXTRAS=1

before_install:
    # OSX setup
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]];
      then
          python3 -m venv environment;
          source environment/bin/activate;
      fi

install:
    - if [[ "$CONDA" == 1 ]];
      then
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
          bash miniconda.sh -b -p $HOME/miniconda;
          export PATH="$HOME/miniconda/bin:$PATH";
          hash -r;
          conda config --set always_yes yes --set changeps1 no;
          conda update -q conda;
          conda info -a;
          conda create -q -n test-env python=$TRAVIS_PYTHON_VERSION;
          source activate test-env;
      fi;
    - pip install Cython numpy;
    - if [[ "$EXTRAS" == 1 ]];
      then
          pip install -r requirements.txt;
          if [[ "$TRAVIS_PYTHON_VERSION" == 2.7 ]];
          then
              if [[ "$MONTEPYTHONMASTER" == 1 ]];
              then
                  wget https://github.com/brinckmann/montepython_public/tarball/master;
                  tar -xf master;
                  pip install argparse;
                  pip install brinckmann-montepython_public-*/ --no-deps;
              else
                  wget https://github.com/brinckmann/montepython_public/archive/3.1.0.tar.gz;
                  tar -xf 3.1.0.tar.gz;
                  pip install argparse;
                  pip install montepython_public-3.1.0/ --no-deps;
              fi;
          fi;
      else
          pip install -r requirements_minimal.txt;
      fi
    - pip install --upgrade pytest;
    - pip install pytest-cov pytest-xdist codecov;
    - pip install flake8 pydocstyle sphinx sphinx_rtd_theme;

before_script:
    # Test for pep-compliance
    - flake8 anesthetic tests

    # Test for documentation style
    - pydocstyle --convention=numpy anesthetic

# Run tests
script:
      python -m pytest --cov=anesthetic -n auto tests/;

# Run coverage summary
after_success:
    - codecov
